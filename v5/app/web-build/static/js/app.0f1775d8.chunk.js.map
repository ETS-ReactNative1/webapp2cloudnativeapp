{"version":3,"sources":["App.js","components/Hello.js","components/BackendAccessor.js"],"names":["theme","DefaultTheme","App","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","row","flexDirection","margin","inputText","padding","maxWidth","borderRadius","input","button","Hello","appID","React","useMemo","AppID","useState","itemsData","setItemsData","onInit","a","async","readItems","results","console","log","inited","setInited","then","init","clientId","discoveryEndpoint","loginButtonDisplayState","setLoginButtonDisplayState","userName","setUserName","inputKey","setInputKey","inputName","setInputName","inputPrice","setInputPrice","style","textAlign","onClick","signin","tokens","idTokenPayload","name","id","fontSize","border","cursor","signout","label","value","onChangeText","text","mode","onPress","queryItems","onPressQuery","map","item","price","username","deleteItem","parseInt","createItem","API_ENDPOINT","process","axios","axiosBase","baseURL","headers","responseType","get","res","data","key","post","status","delete"],"mappings":"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","file":"static/js/app.0f1775d8.chunk.js","sourcesContent":["import React from 'react';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\n\nimport Hello from './components/Hello';\n\n\nconst theme = {\n  ...DefaultTheme\n};\n\nconst App = () => {\n  return (\n    <PaperProvider theme={theme}>\n      <Hello />\n    </PaperProvider>\n  );\n}\n\nexport default App;","import React, {useState} from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Button, TextInput } from 'react-native-paper';\nimport AppID from 'ibmcloud-appid-js';\nimport {\n  readItems,\n  queryItems,\n  createItem,\n  deleteItem\n} from './BackendAccessor';\n\nconst Hello = () => {\n  //. AppID\n  const appID = React.useMemo( () => {\n    return new AppID()\n  }, [] );\n\n  const [itemsData, setItemsData] = useState([]);\n\n  const onInit = async () => {\n    try{\n      const results = await readItems();\n      setItemsData( results );\n    }catch( err ){\n      console.log( err );\n    }\n  };\n\n  const [inited, setInited] = useState(false);\n  ( async () => {\n    try{\n      if( !inited ){\n        setInited( true );\n        onInit().then( () => {} );\n\n        await appID.init({\n          //. 環境変数を取得して指定する\n          clientId: process.env.REACT_APP_APPID_CLIENTID,\n          discoveryEndpoint: process.env.REACT_APP_APPID_ENDPOINT\n        });\n      }\n    }catch( e ){\n      console.log( e );\n    }\n  })();\n\n  const [loginButtonDisplayState, setLoginButtonDisplayState] = React.useState( true );\n  const [userName, setUserName] = React.useState( '' );\n  const loginAction = async () => {\n    try{\n      const tokens = await appID.signin();\n      setLoginButtonDisplayState( false );\n      setUserName( tokens.idTokenPayload.name );\n    }catch( e ){\n      console.log( e );\n    }\n  };\n  const logoutAction = async () => {\n    try{\n      await appID.signout();\n      setLoginButtonDisplayState( true );\n      setUserName( '' );\n    }catch( e ){\n      console.log( e );\n    }\n  };\n\n\n  const [inputKey, setInputKey] = useState('');\n  const [inputName, setInputName] = useState('');\n  const [inputPrice, setInputPrice] = useState(0);\n  const onPressQuery = async () => {\n    try{\n      const results = await queryItems( inputKey );\n      //console.log( results );\n      setItemsData( results );\n    }catch( err ){\n      console.log( err );\n    }\n  };\n  const onPressCreate = async () => {\n    try{\n      const result = await createItem( inputName, inputPrice, userName );\n      setInputName( '' );\n      setInputPrice( 0 );\n      onInit();\n    }catch( err ){\n      console.log( err );\n    }\n  };\n  const onPressDelete = async (id) => {\n    try{\n      const result = await deleteItem( id );\n      onInit();\n    }catch( err ){\n      console.log( err );\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={{textAlign: 'right'}}>\n        {loginButtonDisplayState && <button onClick={loginAction} id=\"login\" style={{fontSize: '24px', backgroundColor: 'skyblue', border: 'none', cursor: 'pointer'}}>Login</button>}\n        {!loginButtonDisplayState && <button onClick={logoutAction} id=\"logout\" style={{fontSize: '24px', backgroundColor: 'skyblue', border: 'none', cursor: 'pointer'}}>Logout</button>}\n      </View>\n      <View style={styles.row}>\n        <TextInput\n          label=\"検索キー\"\n          value={inputKey}\n          style={styles.input}\n          onChangeText={text => setInputKey(text)}\n        />\n        <Button\n          mode=\"contained\"\n          style={styles.button}\n          onPress={ () => onPressQuery().then( () => {} )}\n        >\n          検索\n        </Button>\n      </View>\n\n      <View style={styles.row}>\n      <div>\n        <table border=\"1\">\n          <thead>\n            <th>#</th><th>name</th><th>price</th><th>username</th><th>action</th>\n          </thead>\n          <tbody>\n            {itemsData.map( (item) => \n            <tr>\n              <td>{item.id}</td>\n              <td>{item.name}</td>\n              <td>{item.price}</td>\n              <td>{item.username}</td>\n              <td>\n                <Button\n                  mode=\"contained\"\n                  style={styles.button}\n                  onPress={ () => onPressDelete(item.id)}\n                >\n                  削除 \n                </Button>\n              </td>\n            </tr>\n            )}\n            <tr>\n              <td> - </td>\n              <td>\n                <TextInput\n                  label=\"商品名\"\n                  value={inputName}\n                  style={styles.input}\n                  onChangeText={text => setInputName(text)}\n                />\n              </td>\n              <td>\n                <TextInput\n                  label=\"価格\"\n                  value={inputPrice}\n                  style={styles.input}\n                  onChangeText={text => setInputPrice(parseInt(text))}\n                />\n              </td>\n              <td>{userName}</td>\n              <td>\n                <Button\n                  mode=\"contained\"\n                  style={styles.button}\n                  onPress={() => onPressCreate()}\n                >\n                  追加\n                </Button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: '5px'\n  },\n  inputText: {\n    margin: 10,\n    padding: 10,\n    maxWidth: 600,\n    backgroundColor: 'lightgreen',\n    borderRadius: 5\n  },\n  input: {\n    margin: '5px'\n  },\n  button: {\n    margin: '5px'\n  }\n});\n\nexport default Hello;\n","import axiosBase from 'axios';\n\nconst API_ENDPOINT = process.env.REACT_APP_APISERVER ? process.env.REACT_APP_APISERVER : 'http://localhost:3000';\n\nconst axios = axiosBase.create({\n  baseURL: API_ENDPOINT,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  responseType: 'json'\n})\n\nexport const readItems = async () => {\n  const res = await axios.get( '/api/db/items' );\n\n  return res.data.results;\n};\n\nexport const queryItems = async (key) => {\n  const res = await axios.get( '/api/db/items/' + key );\n\n  return res.data.results;\n};\n\nexport const createItem = async( name, price, username ) => {\n  const res = await axios.post( '/api/db/item', { name: name, price: price, username: username } );\n\n  return res.data.status;\n};\n\nexport const deleteItem = async( id ) => {\n  const res = await axios.delete( '/api/db/item/' + id );\n\n  return res.data.status;\n};\n"],"sourceRoot":""}